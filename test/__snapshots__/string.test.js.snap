// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FIELD_DEFINITION String validate @constraint #contains should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "fooðŸ’©",
      },
      Object {
        "title": "barðŸ’©",
      },
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must contain ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #contains should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "fooðŸ’©",
      },
      Object {
        "title": "barðŸ’©",
      },
      Object {
        "title": "bazðŸ’©",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #endsWith should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "fooðŸ’©",
      },
      Object {
        "title": "barðŸ’©",
      },
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must end with ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #endsWith should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "fooðŸ’©",
      },
      Object {
        "title": "barðŸ’©",
      },
      Object {
        "title": "bazðŸ’©",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #byte should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in byte format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #byte should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "afoo",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #date should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be a date in ISO 8601 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #date should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "2018-05-16",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #date-time should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be a date-time in RFC 3339 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #date-time should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "2018-05-16T12:57:00Z",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #email should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in email format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #email should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "test@test.com",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #ipv4 should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in IP v4 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #ipv4 should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "127.0.0.1",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #ipv6 should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in IP v6 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #ipv6 should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "2001:db8:0000:1:1:1:1:1",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #unknown should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title has invalid format type unknown],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #uri should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in URI format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #uri should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "foobar.com",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #uuid should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: Must be in UUID format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #format #uuid should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "A987FBC9-4BED-3078-CF07-9141BA07C9F3",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #maxLength should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "foo",
      },
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must be no more than 3 characters in length],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #maxLength should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "fo",
      },
      Object {
        "title": "foo",
      },
      Object {
        "title": "bar",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #minLength should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
      Object {
        "title": "foo",
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must be at least 3 characters in length],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #minLength should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "foo",
      },
      Object {
        "title": "foobar",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #notContains should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
      Object {
        "title": null,
      },
      Object {
        "title": "baz",
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must not contain ðŸ’©],
    [GraphQLError: title must not contain ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #notContains should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "foo",
      },
      Object {
        "title": "bar",
      },
      Object {
        "title": "baz",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #pattern should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": null,
      },
      Object {
        "title": null,
      },
      Object {
        "title": "baz",
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must match ^[0-9a-zA-Z]*$],
    [GraphQLError: title must match ^[0-9a-zA-Z]*$],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #pattern should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "foo",
      },
      Object {
        "title": "bar",
      },
      Object {
        "title": "baz",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #startsWith should fail 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "ðŸ’©foo",
      },
      Object {
        "title": "ðŸ’©bar",
      },
      Object {
        "title": null,
      },
    ],
  },
  "errors": Array [
    [GraphQLError: title must start with ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`FIELD_DEFINITION String validate @constraint #startsWith should pass 1`] = `
Object {
  "data": Object {
    "books": Array [
      Object {
        "title": "ðŸ’©foo",
      },
      Object {
        "title": "ðŸ’©bar",
      },
      Object {
        "title": "ðŸ’©baz",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #contains should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "Oh no" at "input.title"; Expected type "ValidateString". title must contain ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #contains should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #endsWith should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "ðŸ’© no" at "input.title"; Expected type "ValidateString". title must end with ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #endsWith should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #byte should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "Â£Â£Â£" at "input.title"; Expected type "ValidateString". Must be in byte format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #byte should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #date should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "too late" at "input.title"; Expected type "ValidateString". Must be a date in ISO 8601 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #date should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #date-time should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "no time" at "input.title"; Expected type "ValidateString". Must be a date-time in RFC 3339 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #date-time should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #email should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "null" at "input.title"; Expected type "ValidateString". Must be in email format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #email should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #ipv4 should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "null" at "input.title"; Expected type "ValidateString". Must be in IP v4 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #ipv4 should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #ipv6 should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "null" at "input.title"; Expected type "ValidateString". Must be in IP v6 format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #ipv6 should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #unknowm should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "a" at "input.title"; Expected type "ValidateString". title has invalid format type unknowm],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #uri should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "null" at "input.title"; Expected type "ValidateString". Must be in URI format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #uri should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #uuid should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "null" at "input.title"; Expected type "ValidateString". Must be in UUID format],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #format #uuid should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #maxLength should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "failðŸ’©" at "input.title"; Expected type "ValidateString". title must be no more than 3 characters in length],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #maxLength should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #maxLength should throw custom error 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "code": "BAD_USER_INPUT",
      "context": Array [
        Object {
          "arg": "maxLength",
          "value": 3,
        },
      ],
      "fieldName": "title",
      "message": "title must be no more than 3 characters in length",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #minLength should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "aðŸ’©" at "input.title"; Expected type "ValidateString". title must be at least 3 characters in length],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #minLength should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #minLength should throw custom error 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    Object {
      "code": "BAD_USER_INPUT",
      "context": Array [
        Object {
          "arg": "minLength",
          "value": 3,
        },
      ],
      "fieldName": "title",
      "message": "title must be at least 3 characters in length",
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #notContains should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "It contains ðŸ’© the sign" at "input.title"; Expected type "ValidateString". title must not contain ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #notContains should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #passwordScore should fail 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #passwordScore should pass equal 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #passwordScore should pass higher 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #pattern should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "Â£Â£Â£" at "input.title"; Expected type "ValidateString". title must match ^[0-9a-zA-Z]*$],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #pattern should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #startsWith should fail 1`] = `
Object {
  "data": undefined,
  "errors": Array [
    [GraphQLError: Variable "$input" got invalid value "no ðŸ’©" at "input.title"; Expected type "ValidateString". title must start with ðŸ’©],
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`INPUT_FIELD_DEFINITION String validate @constraint #startsWith should pass 1`] = `
Object {
  "data": Object {
    "createBook": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
